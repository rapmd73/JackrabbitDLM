#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Chart DLM statistics
# 2019 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/JackrabbitAI/Library')
import os
import time
import datetime
import json
import plotly.express as px
import plotly.graph_objects as go
import plotly.subplots as ps

import DecoratorFunctions as DF
import FileFunctions as FF

DLMlogs='/home/JackrabbitDLM/Logs/JackrabbitDLM.log'

###
### Main code base.
###

if len(sys.argv)<2:
    print("You MUST specify either (I)mage or (H)tml for output type")
    sys.exit(1)

ih=sys.argv[1].lower()
if ih!='i' and ih!='h':
    print("You MUST specify either (I)mage or (H)tml for output type")
    sys.exit(1)

lines=FF.ReadFile(DLMlogs).strip().split('\n')

Dates={}

for line in lines:
    if 'Jackrabbit DLM' in line:
        continue

    data=line.split(' ')

    dt=data[0]+' '+data[1]

    data=line.split(',')

    data[0]=data[0].replace(dt,'')

    stats={}

    for d in data:
        k,v=d.split(':')
        k=k.strip()
        v=int(v.strip())
        stats[k]=v

    Dates[dt]=stats

# Make the chart

if ih=='h':
    fn=f'DLMstats.html'
else:
    fn=f'DLMstats.png'

# Build data table

# Sort dates
dates = sorted(Dates.keys())

# Collect all field names
fields = set()
for v in Dates.values():
    fields.update(v.keys())

# Create one trace per field
traces = []
for field in sorted(fields):
    y = [Dates[dt].get(field, 0) for dt in dates]
    traces.append(go.Scatter(x=dates, y=y, mode='lines', name=field))

# Create and save figure
fig1 = go.Figure(traces)

if ih=='h':
    fig1.add_layout_image(dict(
        source='https://rapmd.net/RAPMDlogo.png',
        xref='paper',yref='paper',
        xanchor='center',yanchor='middle',
        x=0.5,y=0.5,
        sizex=1,sizey=1,
        opacity=0.1
    ))
else:
    fig1.add_layout_image(dict(
        source='file:///var/www/vhosts/rapmd.net/httpdocs/RAPMDlogo.png',
        xref='paper',yref='paper',
        xanchor='center',yanchor='middle',
        x=0.5,y=0.5,
        sizex=1,sizey=1,
        opacity=0.1
    ))
fig1.update_yaxes(title_text='DLM Calls')
fig1.update_layout(autosize=True,title={"text":"JackrabbitDLM Statistics","x":0.5,"xanchor":"center","yanchor":"top"},template='plotly_white',legend_title='Calls')

if ih=='h':
    fig1.write_html(fn)
else:
    fig1.write_image(fn,width=1920/2,height=1024/2)

###
### End Program
###
